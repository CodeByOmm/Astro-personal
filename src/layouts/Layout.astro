---
interface Props {
  title: string;
}
// import 'tailwindcss-intersect/dist/observer.min.js';
import Footer from '../components/Footer.astro';
import Navbar from '../components/Navbar.astro';
import { siteConfig } from '../config.js';
import '../styles/global.css';
const templateDescription = ` ~ ${siteConfig.templateName} A free, open-source, responsive landing page template built with Astro and FlyonUI.`;
const { title } = Astro.props;

// TODO: Package
// const isPackage = Astro.env === "package"; // Adjust this as necessary based on your actual setup
---

<!doctype html>
<html lang="en" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.ico" />
    <meta name="generator" content={Astro.generator} />
    <meta name="keywords" content={siteConfig.templateKeyword} />
    <meta property="og:title" content={siteConfig.ogTitle} />
    <meta property="og:type" content={siteConfig.ogType} />
    <meta property="og:image" content={siteConfig.ogImage} />
    <meta property="og:description" content={templateDescription} />
    <meta property="og:site_name" content={siteConfig.creatorName} />
    <meta property="og:url" content={siteConfig.productPage} />
    <link rel="stylesheet" href="/assets/libs/flatpickr/dist/flatpickr.css" />

    <link
      href="https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap"
      rel="stylesheet"
    />
    <link
      href="https://fonts.googleapis.com/css?family=Archivo:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap"
      rel="stylesheet"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Rubik:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap"
      rel="stylesheet"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap"
      rel="stylesheet"
    />
    <link
      href="https://fonts.googleapis.com/css?family=Fira+Code:wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap"
      rel="stylesheet"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&ampdisplay=swap"
      rel="stylesheet"
    />
    <title>
      {title} | {siteConfig.templateName} - {siteConfig.templateSuffix}
    </title>

    // TODO: Package
    <!-- Conditional Title -->
    <!-- <title>
      {isPackage
        ? `${title} | ${siteConfig.templateSuffix}`
        : `${title} | ${siteConfig.templateName} - ${siteConfig.templateSuffix}`}
    </title> -->

    <!-- Theme JS -->
    <!-- <script is:inline define:vars={{ layoutPath, templateName }}>
      (function () {
        try {
          const root = document.documentElement;
          const layoutPathClean =
            layoutPath?.replace("/", "") || "free-landing-page";
          const localStorageKey = `${layoutPathClean}-theme`;

          // Theme configuration loaded from page-config.json at build time
          window.THEME_CONFIG = {
            "free-landing-page": {
              default: "light",
              light: "light",
              dark: "dark",
              system: { light: "light", dark: "dark" },
            },
          };

          // Get current system theme preference
          const getSystemPreference = () =>
            window.matchMedia("(prefers-color-scheme: dark)").matches;

          // Resolve theme based on user selection and layout configuration
          const resolveTheme = (selectedTheme, layoutPath) => {
            const layoutConfig = window.THEME_CONFIG[layoutPath];
            if (!layoutConfig)
              return selectedTheme === "system"
                ? getSystemPreference()
                  ? "dark"
                  : "light"
                : selectedTheme;

            if (selectedTheme === "system") {
              const systemConfig = layoutConfig.system;
              const prefersDark = getSystemPreference();
              return prefersDark ? systemConfig.dark : systemConfig.light;
            }

            return (
              layoutConfig[selectedTheme] ||
              selectedTheme ||
              layoutConfig.default ||
              "light"
            );
          };

          const savedTheme = localStorage.getItem(localStorageKey) || "system";
          const resolvedTheme = resolveTheme(savedTheme, layoutPathClean);

          root.setAttribute("data-theme", resolvedTheme);
        } catch (e) {
          console.warn("Early theme script error:", e);
        }
      })();
    </script> -->
  </head>
  <body class="font-inter">
    <div class="flex min-h-screen flex-col">
      <Navbar />
      <main class="grow">
        <slot />
      </main>
      <Footer />
    </div>
    <!-- <script src="/vendor/flyonui.js" defer></script> -->
     <script is:inline src="/assets/libs/tailwindcss-intersect/dist/observer.min.js"></script>
     <script is:inline src="/assets/libs/flatpickr/dist/flatpickr.js"></script>
     <script is:inline src="/assets/libs/flyonui/flyonui.js"></script>
  </body>
  </html>
